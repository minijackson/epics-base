name: Meson builds

on:
  push:
    paths-ignore:
      - 'documentation/*'
      - 'startup/*'
      - '.appveyor/*'
      - '.tools/*'
      - '.lgtm.yml'
      - '.gitattributes'
      - '**/*.html'
      - '**/*.md'
  pull_request:
    paths-ignore:
      - 'documentation/*'
      - 'startup/*'
      - '.appveyor/*'
      - '.tools/*'
      - '.lgtm.yml'
      - '.gitattributes'
      - '**/*.html'
      - '**/*.md'

jobs:
  libcom-build:
    name: Meson build for ${{ matrix.cross.prefix }}
    runs-on: ubuntu-latest
    env:
      CROSS: ${{ matrix.cross.enabled && 'true' }}
      HOST_SYSTEM: ${{ matrix.cross.system }}
      HOST_CPU_FAMILY: ${{ matrix.cross.cpu_family }}
      HOST_CPU: ${{ matrix.cross.cpu }}
      HOST_ENDIAN: ${{ matrix.cross.endian }}
      HOST_COMPILER_PREFIX: ${{ matrix.cross.prefix }}
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Update package repositories
        run: sudo apt-get update
      - name: Install Dependencies
        run: sudo apt-get install -y meson ninja-build pkg-config perl valgrind
      - if: ${{ inputs.cross }}
        name: Install cross-compiler
        run: sudo apt-get install -y ${{ inputs.package }}

      - name: Build libCom
        run: ./.github/meson-build/build.sh modules/libcom
      - name: Build libCa
        run: ./.github/meson-build/build.sh modules/ca
      - name: Build pvData
        run: ./.github/meson-build/build.sh modules/pvData
      - name: Build normativeTypes
        run: ./.github/meson-build/build.sh modules/normativeTypes
      - name: Build pvAccess
        run: ./.github/meson-build/build.sh modules/pvAccess
      - name: Build pvDatabase
        run: ./.github/meson-build/build.sh modules/pvDatabase
    strategy:
      matrix:
        cross:
          - enabled: false
          - enabled: true
            system: linux
            cpu_family: arm
            cpu: aarch64
            endian: little
            prefix: aarch64-linux-gnu-
            package: g++-aarch64-linux-gnu
          - enabled: true
            system: linux
            cpu_family: arm
            cpu: arm
            endian: little
            prefix: aarch64-linux-gnueabi-
            package: g++-arm-linux-gnueabi
          - enabled: true
            system: linux
            cpu_family: arm
            cpu: arm
            endian: little
            prefix: aarch64-linux-gnueabihf-
            package: g++-arm-linux-gnueabihf
